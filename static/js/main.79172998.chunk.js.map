{"version":3,"sources":["components/Scenes/Cross.jsx","components/SceneManager.jsx","components/Scenes/Fight.jsx","components/Scenes/Chest.jsx","components/HeroScene.jsx","components/TransitionScene.jsx","App.jsx","index.js"],"names":["Cross","SwitchLoat","window","onload","document","getElementById","classList","toggle","global","RoomRestoreHP","this","className","onClick","SceneHandleClick","Component","Scenes","Scenemanager","props","handleClick","console","log","indexTmp","state","index","chance","Math","floor","random","setState","scene","bind","Enemies","Name","Lvl","minDmgHero","maxDmgHero","MaxHP","CurrentHp","Portret","Fight","Kick","style","webkitFilter","DMGarr","getElementsByClassName","EnemyAttacks","Array","i","enemy","setTimeout","innerHTML","AllHeroDmg","reduce","sum","elem","Hurt","dmg","transition","curHp","getAllDmg","ExitFight","CheckDeath","length","enemyKick","enemyDmg","enemyHurt","removeAttribute","setAttribute","id","src","alt","Chest","ShowPopUp","point","PointsUp","Heroscene","name","prompt","handlePointsUp","points","tmpL","tmpP","Kills","handleDmgControl","handleRoomRestoreHP","StartFight","button","HeroAttacks","CompareDmg","hero","def","Death","Transitionscene","App","SceneManager","HeroScene","ReactDOM","render"],"mappings":"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","file":"static/js/main.79172998.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Cross extends Component {\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    \r\n    \r\n    componentWillUnmount(){\r\n        global.RoomRestoreHP();\r\n    }\r\n\r\n    render() {\r\n        this.SwitchLoat();\r\n        return (\r\n            <section className=\"ActField Crossroad\">\r\n                <div className=\"Request\">\r\n                Crossroads\r\n                </div>\r\n                <div className=\"Way\" onClick={() => {global.SceneHandleClick()}}></div>\r\n                <div className=\"Way\" onClick={global.SceneHandleClick}></div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cross;\r\n","import React, { Component } from 'react';\r\nimport Fight from './Scenes/Fight';\r\nimport Cross from './Scenes/Cross';\r\nimport Chest from './Scenes/Chest';\r\n//import TransitionScene from './TransitionScene'\r\n\r\nvar Scenes = [<Fight/>, <Cross/>, <Chest/>];\r\n\r\nclass Scenemanager extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        global.SceneHandleClick = this.handleClick;\r\n        this.state = {\r\n            index: 1,\r\n            scene: <Cross/>\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick = () => {\r\n        console.log(228)\r\n        var indexTmp = this.state.index;\r\n        while (indexTmp === this.state.index) {\r\n            let chance = Math.floor(Math.random() * 10);\r\n            if (chance > 5) {\r\n                indexTmp = 1;\r\n            } else if (chance > 2) {\r\n                indexTmp = 2;\r\n            } else {\r\n                indexTmp = 0;\r\n            }\r\n            if (this.state.index !== indexTmp) {\r\n                console.log(\"dfgdfgfd\")\r\n                this.setState({index: indexTmp})\r\n                this.setState({scene : Scenes[indexTmp]})\r\n                return\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    ChangeChance(){\r\n        console.log(Scenemanager.state.chance);\r\n    }\r\n    render() {\r\n        return this.state.scene;\r\n    }\r\n}\r\n\r\nexport default Scenemanager;\r\n","import React, { Component } from 'react';\r\n\r\nvar Enemies = [];\r\n    Enemies[0] = {\r\n        Name: \"Spider\",\r\n        Lvl: 1,\r\n        minDmgHero: 1,\r\n        maxDmgHero: 3,\r\n        MaxHP: 10,\r\n        CurrentHp: 10,\r\n        Portret: \"http://pm1.narvii.com/6759/1d1de67151d4abbf85b9ea41f0e697fd89579b36v2_00.jpg\"\r\n    }\r\n    Enemies[1] = {\r\n        Name: \"Snake\",\r\n        Lvl: 2,\r\n        minDmgHero: 2,\r\n        maxDmgHero: 6,\r\n        MaxHP: 15,\r\n        CurrentHp: 15,\r\n        Portret: \"https://listverse.com/wp-content/uploads/2017/02/00895-1200x720.jpg\"\r\n    }\r\n    Enemies[2] = {\r\n        Name: \"Skeleton\",\r\n        Lvl: 3,\r\n        minDmgHero: 3,\r\n        maxDmgHero: 9,\r\n        MaxHP: 20,\r\n        CurrentHp: 20,\r\n        Portret: \"https://i.pinimg.com/736x/51/67/f0/5167f01b215b715074252c62c5129e4c.jpg\"\r\n    }\r\n\r\n\r\nclass Fight extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            enemy : Enemies[Math.floor(Math.random() * Enemies.length)],\r\n            AllHeroDmg : 0,\r\n            curHp : 0\r\n        }\r\n        this.getAllDmg = this.getAllDmg.bind(this);\r\n        this.Kick = this.Kick.bind(this);\r\n        this.Hurt = this.Hurt.bind(this);\r\n        this.CheckDeath = this.CheckDeath.bind(this)\r\n\r\n        global.enemyKick = this.Kick;\r\n        global.enemyDmg = this.getAllDmg;\r\n        global.enemyHurt = this.Hurt;\r\n        global.CheckDeath = this.CheckDeath;\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState({curHp : this.state.enemy.CurrentHp})\r\n        document.getElementsByClassName('AttackButton')[0].removeAttribute('disabled');\r\n        this.ExitFight();\r\n        global.Fight();\r\n    }\r\n    componentWillUnmount(){\r\n        document.getElementsByClassName('AttackButton')[0].setAttribute('disabled', true);\r\n        document.getElementsByClassName('AttackButton')[0].innerHTML = \"Searching...\";\r\n        global.RoomRestoreHP();\r\n    }\r\n    Kick = () => {\r\n        document.getElementById(\"mgmg\").style.webkitFilter = \"invert(0%)\";\r\n        var DMGarr = document.getElementsByClassName(\"Power\");\r\n\r\n        var EnemyAttacks = new Array(3);\r\n        for (let i = 0; i < 3; i++) {\r\n            EnemyAttacks[i] = Math.floor(\r\n                this.state.enemy.minDmgHero + Math.random() * \r\n                (this.state.enemy.maxDmgHero - this.state.enemy.minDmgHero + 1)\r\n            );\r\n            setTimeout(() => {\r\n                DMGarr[i].innerHTML = EnemyAttacks[i]\r\n            }, (i - 2) * 1000);\r\n        }\r\n        this.setState({AllHeroDmg : EnemyAttacks.reduce((sum, elem) => {return sum + elem})})\r\n    }\r\n    Hurt = dmg => {\r\n        \r\n        document.getElementById(\"mgmg\").style.transition = \"all .3s\";\r\n        document.getElementById(\"mgmg\").style.webkitFilter = \"invert(100%)\";\r\n        this.setState({curHp : this.state.curHp - dmg});\r\n        if (this.state.curHp <= 0) {\r\n            //this.Death()\r\n        }\r\n    }\r\n    getAllDmg = () => {return this.state.AllHeroDmg};\r\n\r\n    ExitFight = () => {\r\n        document.getElementsByClassName('AttackButton')[0].innerHTML = \"Move next\";\r\n        //document.getElementsByClassName('AttackButton')[0].onclick = () => {global.SceneHandleClick()};\r\n    }\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    CheckDeath = () => {\r\n        if(this.state.curHp <= 0) return true;\r\n    }\r\n\r\n    render() {\r\n        this.SwitchLoat();\r\n\r\n        return (\r\n            <section className=\"ActField Enemy\">\r\n                <div className=\"Bio\">\r\n                <div className=\"Name\">{this.state.enemy.Name}</div>\r\n                <img id='mgmg' src={this.state.enemy.Portret} alt=\"avatar\"/>\r\n            </div>\r\n            <div className=\"FightBoard\">\r\n                <div className=\"PowerSum\">\r\n                    <span className=\"Power\">-</span>\r\n                    <span className=\"Power\">-</span>\r\n                    <span className=\"Power\">-</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"Stats\">\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Level </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.Lvl}</span>\r\n                </div>\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Damage </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.minDmgHero}-{this.state.enemy.maxDmgHero}</span>\r\n                </div>\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Health </span>\r\n                    <span className=\"StatValue\">{this.state.curHp} out of {this.state.enemy.MaxHP}</span>\r\n                </div>\r\n            </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fight;\r\n","import React, { Component } from 'react';\r\n\r\nclass Chest extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            point: Math.floor(Math.random() * 10) + 1\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.SwitchLoat();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        global.RoomRestoreHP();\r\n    }\r\n\r\n\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    ShowPopUp = () => {\r\n        document.getElementsByClassName(\"Pop_Up\")[0]\r\n        .classList.toggle(\"Active\");\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"ActField Chest\">\r\n                <div className=\"Request\">\r\n                    You find a chest\r\n                </div>\r\n                <div className=\"ActWindow\" onClick={this.ShowPopUp}>\r\n                    \r\n                </div>\r\n                <div className=\"Pop_Up Active\">\r\n                    <div className=\"Bl\">\r\n                        <span className=\"Text\">You recive </span>\r\n                        <span className=\"Value\">{this.state.point}</span>\r\n                        <span className=\"Text\"> points</span>\r\n                    </div>\r\n                    <button onClick={() => {this.SwitchLoat(); this.ShowPopUp(); global.SceneHandleClick(); global.PointsUp(this.state.point);}}>Move next</button>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chest;\r\n","import React, { Component } from 'react';\r\n//import { useState, useEffect } from 'react';\r\n\r\nclass Heroscene extends Component {\r\n    constructor (props) {\r\n        var name = prompt('Input your hero name:');\r\n\r\n        super(props);\r\n        this.state = {\r\n            Name: (name === '' || name === null ? \"Unnamed Hero\" : name),\r\n            minDmgHero: 4,\r\n            maxDmgHero: 5,\r\n            MaxHP: 20,\r\n            CurrentHp: 20,\r\n            Lvl: 1,\r\n            Kills: 0\r\n        }\r\n\r\n        this.handlePointsUp = this.handlePointsUp.bind(this);\r\n        this.handleRoomRestoreHP = this.handleRoomRestoreHP.bind(this);\r\n        this.StartFight = this.StartFight.bind(this);\r\n\r\n        global.PointsUp = this.handlePointsUp;\r\n        global.RoomRestoreHP = this.handleRoomRestoreHP;\r\n        global.Fight = this.StartFight;\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementsByClassName('AttackButton')[0].setAttribute('disabled', true);\r\n        \r\n    }\r\n\r\n    handlePointsUp = points => {\r\n        var tmpL = this.state.Lvl;\r\n        var tmpP = this.state.Kills + points;\r\n\r\n        this.setState({Kills : tmpP});\r\n        while (tmpL * 5 < tmpP) {\r\n            this.setState({\r\n                Lvl : ++tmpL,\r\n                MaxHP : this.state.MaxHP + 3\r\n            });\r\n            this.handleDmgControl();\r\n        }\r\n    }\r\n    handleRoomRestoreHP = () => {\r\n        if(this.state.CurrentHp + 3 <= this.state.MaxHP){\r\n            this.setState({CurrentHp : this.state.CurrentHp + 3});\r\n        } else{\r\n            this.setState({CurrentHp : this.state.MaxHP});\r\n        }\r\n        \r\n    }\r\n    handleDmgControl = () => {\r\n        if (this.state.Lvl % 2 === 0){\r\n            this.setState({minDmgHero : this.state.minDmgHero + 1});\r\n        } else{\r\n            this.setState({maxDmgHero : this.state.maxDmgHero + 1});\r\n        }\r\n    }\r\n\r\n    StartFight = () => {\r\n        document.getElementsByClassName('AttackButton')[0].innerHTML = \"Attack!\";\r\n    }\r\n\r\n    Kick = () => {\r\n        \r\n\r\n        var DMGarr = document.getElementsByClassName(\"Power\");\r\n        let button = document.getElementsByClassName(\"AttackButton\")[0];\r\n        button.setAttribute('disabled', true);\r\n        for (let i = 0; i < 6; i++) {\r\n            DMGarr[i].innerHTML = '-';\r\n        }\r\n\r\n        var HeroAttacks = new Array(3);\r\n        for (let i = 3; i < 6; i++) {\r\n            HeroAttacks[i - 3] = Math.floor(\r\n                this.state.minDmgHero + Math.random() * \r\n                (this.state.maxDmgHero - this.state.minDmgHero + 1)\r\n            );\r\n            setTimeout(() => {\r\n                DMGarr[i].innerHTML = HeroAttacks[i - 3]\r\n            }, (i - 2) * 500);\r\n        }\r\n        var AllHeroDmg = HeroAttacks.reduce((sum, elem) => {return sum + elem});\r\n        setTimeout(() => {\r\n            document.getElementById(\"mgi\").style.webkitFilter = \"invert(0%)\";\r\n            global.enemyKick();\r\n        }, 2000)\r\n\r\n        setTimeout(() => {\r\n            button.removeAttribute('disabled')\r\n            this.CompareDmg(AllHeroDmg, global.enemyDmg())\r\n            if(global.CheckDeath()){             \r\n                let button = document.getElementsByClassName(\"AttackButton\")[0];\r\n                button.setAttribute('disabled', true);\r\n                button.innerHTML = \"Battle ends..\";\r\n                global.PointsUp(Math.floor(Math.random() * 10) + 1);\r\n                setTimeout(() => {\r\n                    console.log(333)\r\n                    \r\n                    global.SceneHandleClick()\r\n                }, 1000)\r\n            }\r\n        }, 4000)\r\n    }\r\n    CompareDmg = (hero, enemy) => {\r\n        var def = hero - enemy\r\n        if(def < 0){\r\n            this.Hurt(def * -1)\r\n        }else if(def > 0){\r\n            global.enemyHurt(def)\r\n        }\r\n    }\r\n    Hurt = dmg => {\r\n        \r\n        document.getElementById(\"mgi\").style.transition = \"all .3s\";\r\n        document.getElementById(\"mgi\").style.webkitFilter = \"invert(100%)\";\r\n        this.setState({CurrentHp : this.state.CurrentHp - dmg});\r\n        if (this.state.CurrentHp <= 0) {\r\n            this.Death()\r\n        }\r\n    }\r\n    Death = () => {\r\n        let button = document.getElementsByClassName(\"AttackButton\")[0];\r\n        button.setAttribute('disabled', true);\r\n        button.innerHTML = \"Restart your page\";\r\n        this.setState({\r\n            Name: \"Dead\",\r\n        })\r\n        document.getElementById(\"mgi\").style.transition = \"all .3s\";\r\n        document.getElementById(\"mgi\").style.webkitFilter = \"grayscale(90%)\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"ActField Hero\">\r\n                    <div className=\"Bio\">\r\n                    <div className=\"Name\">{this.state.Name}</div>\r\n                    <img id='mgi' src='https://lh3.googleusercontent.com/flLZ0z2tG7Uk5iavguxeVN6rm6zgQnnwrccFfj0VeO_TVfCfkpG8bPoFXl3oIOISV63c=s89' alt=\"avatar\"/>\r\n                </div>\r\n                <div className=\"FightBoard\">\r\n                    <div className=\"PowerSum\">\r\n                        <span className=\"Power\">-</span>\r\n                        <span className=\"Power\">-</span>\r\n                        <span className=\"Power\">-</span>\r\n                    </div>\r\n                    <button className=\"AttackButton\" id=\"fck\" onClick={() => this.Kick()}>Searching...</button>\r\n                </div>\r\n                <div className=\"Stats\">\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Level </span>\r\n                        <span className=\"StatValue\">{this.state.Lvl}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Points </span>\r\n                        <span className=\"StatValue\">{this.state.Kills}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Damage </span>\r\n                        <span className=\"StatValue\">{this.state.minDmgHero}-{this.state.maxDmgHero}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Health </span>\r\n                        <span className=\"StatValue\">{this.state.CurrentHp} out of {this.state.MaxHP}</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Heroscene;\r\n","import React, { Component } from 'react';\r\n\r\nclass Transitionscene extends Component {\r\n    static SwitchLoat(){\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ActField Transition\" id=\"trans\">\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Transitionscene;\r\n","import React from \"react\";\nimport SceneManager from \"./components/SceneManager.jsx\";\nimport HeroScene from \"./components/HeroScene.jsx\";\nimport Transitionscene from \"./components/TransitionScene.jsx\";\nimport './style.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Transitionscene/>\n      <SceneManager/>\n      <HeroScene/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}