{"version":3,"sources":["components/TransitionScene.jsx","components/Scenes/Cross.jsx","components/SceneManager.jsx","components/Scenes/Fight.jsx","components/Scenes/Chest.jsx","components/HeroScene.jsx","App.jsx","index.js"],"names":["Transitionscene","className","id","window","onload","document","getElementById","classList","toggle","Component","Cross","SwitchLoat","this","onClick","global","SceneHandleClick","Scenes","Scenemanager","props","handleClick","TransitionScene","indexTmp","state","index","chance","Math","floor","random","setState","scene","console","log","Enemies","Name","Lvl","minDmgHero","maxDmgHero","MaxHP","CurrentHp","Fight","ExitFight","getElementsByClassName","innerHTML","enemy","removeAttribute","setAttribute","src","alt","Chest","ShowPopUp","point","Heroscene","PointsUp","points","tmpL","tmpP","Kills","App","SceneManager","HeroScene","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3d1d04a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Transitionscene extends Component {\r\n    static SwitchLoat(){\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ActField Transition\" id=\"trans\">\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Transitionscene;\r\n","import React, { Component } from 'react';\r\n\r\nclass Cross extends Component {\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        this.SwitchLoat();\r\n        return (\r\n            <section className=\"ActField Crossroad\">\r\n                <div className=\"Request\">\r\n                Crossroads\r\n                </div>\r\n                <div className=\"Way\" onClick={() => {global.SceneHandleClick(); this.SwitchLoat();}}></div>\r\n                <div className=\"Way\" onClick={global.SceneHandleClick}></div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cross;\r\n","import React, { Component } from 'react';\r\nimport Fight from './Scenes/Fight';\r\nimport Cross from './Scenes/Cross';\r\nimport Chest from './Scenes/Chest';\r\nimport TransitionScene from './TransitionScene'\r\n\r\nvar Scenes = [<Fight/>, <Cross/>, <Chest/>];\r\n\r\nclass Scenemanager extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        global.SceneHandleClick = this.handleClick;\r\n        this.state = {\r\n            index: 1,\r\n            scene: <Cross/>\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        \r\n        TransitionScene.SwitchLoat();\r\n        var indexTmp = this.state.index;\r\n        while (indexTmp === this.state.index) {\r\n            let chance = Math.floor(Math.random() * 10);\r\n            if (chance > 5) {\r\n                indexTmp = 1;\r\n            } else if (chance > 2) {\r\n                indexTmp = 2;\r\n            } else {\r\n                indexTmp = 0;\r\n            }\r\n            if (this.state.index !== indexTmp) {\r\n                this.setState({index: indexTmp})\r\n                this.setState({scene : Scenes[indexTmp]})\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    ChangeChance(){\r\n        console.log(Scenemanager.state.chance);\r\n    }\r\n    render() {\r\n        return this.state.scene;\r\n    }\r\n}\r\n\r\nexport default Scenemanager;\r\n","import React, { Component } from 'react';\r\n\r\nvar Enemies = [];\r\n    Enemies[0] = {\r\n        Name: \"Spider\",\r\n        Lvl: 1,\r\n        minDmgHero: 1,\r\n        maxDmgHero: 3,\r\n        MaxHP: 10,\r\n        CurrentHp: 10\r\n    }\r\n    Enemies[1] = {\r\n        Name: \"Snake\",\r\n        Lvl: 2,\r\n        minDmgHero: 2,\r\n        maxDmgHero: 6,\r\n        MaxHP: 15,\r\n        CurrentHp: 15\r\n    }\r\n    Enemies[2] = {\r\n        Name: \"Skeleton\",\r\n        Lvl: 3,\r\n        minDmgHero: 3,\r\n        maxDmgHero: 9,\r\n        MaxHP: 20,\r\n        CurrentHp: 20\r\n    }\r\n\r\n\r\nclass Fight extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            enemy : Enemies[Math.floor(Math.random() * 2)],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        document.getElementsByClassName('AttackButton')[0].removeAttribute('disabled');\r\n        this.ExitFight();\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(2)\r\n        document.getElementsByClassName('AttackButton')[0].setAttribute('disabled', true);\r\n        document.getElementsByClassName('AttackButton')[0].innerHTML = \"Searching...\";;\r\n    }\r\n\r\n    ExitFight = () => {\r\n        document.getElementsByClassName('AttackButton')[0].innerHTML = \"Move next\";\r\n        //document.getElementsByClassName('AttackButton')[0].onclick = () => {global.SceneHandleClick()};\r\n    }\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        this.SwitchLoat();\r\n\r\n        return (\r\n            <section className=\"ActField Enemy\">\r\n                <div className=\"Bio\">\r\n                <div className=\"Name\">{this.state.enemy.Name}</div>\r\n                <img src=\"http://placekitten.com/500/300\" alt=\"avatar\"/>\r\n            </div>\r\n            <div className=\"FightBoard\">\r\n                <div className=\"PowerSum\">\r\n                    <span className=\"Power\">-</span>\r\n                    <span className=\"Power\">-</span>\r\n                    <span className=\"Power\">-</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"Stats\">\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Level </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.Lvl}</span>\r\n                </div>\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Damage </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.minDmgHero}-{this.state.enemy.maxDmgHero}</span>\r\n                </div>\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Health </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.CurrentHp} out of {this.state.enemy.MaxHP}</span>\r\n                </div>\r\n            </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fight;\r\n","import React, { Component } from 'react';\r\n\r\nclass Chest extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            point: Math.floor(Math.random() * 8) * 10\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.SwitchLoat();\r\n    }\r\n\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    ShowPopUp = () => {\r\n        document.getElementsByClassName(\"Pop_Up\")[0]\r\n        .classList.toggle(\"Active\");\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"ActField Chest\">\r\n                <div className=\"Request\">\r\n                    You find a chest\r\n                </div>\r\n                <div className=\"ActWindow\" onClick={this.ShowPopUp}>\r\n                    \r\n                </div>\r\n                <div className=\"Pop_Up Active\">\r\n                    <div className=\"Bl\">\r\n                        <span className=\"Text\">You recive </span>\r\n                        <span className=\"Value\">{this.state.point}</span>\r\n                        <span className=\"Text\"> points</span>\r\n                    </div>\r\n                    <button onClick={() => {this.SwitchLoat(); this.ShowPopUp(); global.SceneHandleClick();}}>Move next</button>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chest;\r\n","import React, { Component } from 'react';\r\n\r\nclass Heroscene extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            Name: \"TiredTorch\",\r\n            minDmgHero: 3,\r\n            maxDmgHero: 10,\r\n            MaxHP: 20,\r\n            CurrentHp: 20,\r\n            Lvl: 1,\r\n            Kills: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementsByClassName('AttackButton')[0].setAttribute('disabled', true);\r\n    }\r\n\r\n    PointsUp = points => {\r\n        var tmpL = this.state.Lvl;\r\n        var tmpP = this.state.Kills + points;\r\n\r\n        this.setState({Kills : tmpP});\r\n        while (tmpL * 5 < tmpP) {\r\n            this.setState({Lvl : ++tmpL});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"ActField Hero\">\r\n                    <div className=\"Bio\">\r\n                    <div className=\"Name\">{this.state.Name}</div>\r\n                    <img src=\"http://placekitten.com/200/300\" alt=\"avatar\"/>\r\n                </div>\r\n                <div className=\"FightBoard\">\r\n                    <div className=\"PowerSum\">\r\n                        <span className=\"Power\">-</span>\r\n                        <span className=\"Power\">-</span>\r\n                        <span className=\"Power\">-</span>\r\n                    </div>\r\n                    <button className=\"AttackButton\" id=\"fck\" onClick={() => global.SceneHandleClick()}>Searching...</button>\r\n                </div>\r\n                <div className=\"Stats\">\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Level </span>\r\n                        <span className=\"StatValue\">{this.state.Lvl}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Points </span>\r\n                        <span className=\"StatValue\">{this.state.Kills}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Damage </span>\r\n                        <span className=\"StatValue\">{this.state.minDmgHero}-{this.state.maxDmgHero}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Health </span>\r\n                        <span className=\"StatValue\">{this.state.CurrentHp} out of {this.state.MaxHP}</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Heroscene;\r\n","import React from \"react\";\nimport SceneManager from \"./components/SceneManager.jsx\";\nimport HeroScene from \"./components/HeroScene.jsx\";\nimport Transitionscene from \"./components/TransitionScene.jsx\";\nimport './style.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Transitionscene/>\n      <SceneManager/>\n      <HeroScene/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}