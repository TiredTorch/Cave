{"version":3,"sources":["components/TransitionScene.jsx","components/Scenes/Cross.jsx","components/SceneManager.jsx","components/Scenes/Fight.jsx","components/Scenes/Chest.jsx","components/HeroScene.jsx","App.jsx","index.js"],"names":["Transitionscene","className","id","window","onload","document","getElementById","classList","toggle","Component","Cross","SwitchLoat","global","RoomRestoreHP","this","onClick","SceneHandleClick","Scenes","Scenemanager","props","handleClick","TransitionScene","indexTmp","state","index","chance","Math","floor","random","setState","scene","console","log","Enemies","Name","Lvl","minDmgHero","maxDmgHero","MaxHP","CurrentHp","Fight","ExitFight","getElementsByClassName","innerHTML","enemy","removeAttribute","setAttribute","src","alt","Chest","ShowPopUp","point","PointsUp","Heroscene","name","prompt","handlePointsUp","points","tmpL","tmpP","Kills","handleDmgControl","handleRoomRestoreHP","StartFight","bind","App","SceneManager","HeroScene","ReactDOM","render"],"mappings":"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","file":"static/js/main.56041e88.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Transitionscene extends Component {\r\n    static SwitchLoat(){\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ActField Transition\" id=\"trans\">\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Transitionscene;\r\n","import React, { Component } from 'react';\r\n\r\nclass Cross extends Component {\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    \r\n    \r\n    componentWillUnmount(){\r\n        global.RoomRestoreHP();\r\n    }\r\n\r\n    render() {\r\n        this.SwitchLoat();\r\n        return (\r\n            <section className=\"ActField Crossroad\">\r\n                <div className=\"Request\">\r\n                Crossroads\r\n                </div>\r\n                <div className=\"Way\" onClick={() => {global.SceneHandleClick(); this.SwitchLoat();}}></div>\r\n                <div className=\"Way\" onClick={global.SceneHandleClick}></div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cross;\r\n","import React, { Component } from 'react';\r\nimport Fight from './Scenes/Fight';\r\nimport Cross from './Scenes/Cross';\r\nimport Chest from './Scenes/Chest';\r\nimport TransitionScene from './TransitionScene'\r\n\r\nvar Scenes = [<Fight/>, <Cross/>, <Chest/>];\r\n\r\nclass Scenemanager extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        global.SceneHandleClick = this.handleClick;\r\n        this.state = {\r\n            index: 1,\r\n            scene: <Cross/>\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        \r\n        TransitionScene.SwitchLoat();\r\n        var indexTmp = this.state.index;\r\n        while (indexTmp === this.state.index) {\r\n            let chance = Math.floor(Math.random() * 10);\r\n            if (chance > 5) {\r\n                indexTmp = 1;\r\n            } else if (chance > 2) {\r\n                indexTmp = 2;\r\n            } else {\r\n                indexTmp = 0;\r\n            }\r\n            if (this.state.index !== indexTmp) {\r\n                this.setState({index: indexTmp})\r\n                this.setState({scene : Scenes[indexTmp]})\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    ChangeChance(){\r\n        console.log(Scenemanager.state.chance);\r\n    }\r\n    render() {\r\n        return this.state.scene;\r\n    }\r\n}\r\n\r\nexport default Scenemanager;\r\n","import React, { Component } from 'react';\r\n\r\nvar Enemies = [];\r\n    Enemies[0] = {\r\n        Name: \"Spider\",\r\n        Lvl: 1,\r\n        minDmgHero: 1,\r\n        maxDmgHero: 3,\r\n        MaxHP: 10,\r\n        CurrentHp: 10\r\n    }\r\n    Enemies[1] = {\r\n        Name: \"Snake\",\r\n        Lvl: 2,\r\n        minDmgHero: 2,\r\n        maxDmgHero: 6,\r\n        MaxHP: 15,\r\n        CurrentHp: 15\r\n    }\r\n    Enemies[2] = {\r\n        Name: \"Skeleton\",\r\n        Lvl: 3,\r\n        minDmgHero: 3,\r\n        maxDmgHero: 9,\r\n        MaxHP: 20,\r\n        CurrentHp: 20\r\n    }\r\n\r\n\r\nclass Fight extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            enemy : Enemies[Math.floor(Math.random() * 2)],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        document.getElementsByClassName('AttackButton')[0].removeAttribute('disabled');\r\n        this.ExitFight();\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(2)\r\n        document.getElementsByClassName('AttackButton')[0].setAttribute('disabled', true);\r\n        document.getElementsByClassName('AttackButton')[0].innerHTML = \"Searching...\";\r\n        global.RoomRestoreHP();\r\n    }\r\n    \r\n\r\n    ExitFight = () => {\r\n        document.getElementsByClassName('AttackButton')[0].innerHTML = \"Move next\";\r\n        //document.getElementsByClassName('AttackButton')[0].onclick = () => {global.SceneHandleClick()};\r\n    }\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        this.SwitchLoat();\r\n\r\n        return (\r\n            <section className=\"ActField Enemy\">\r\n                <div className=\"Bio\">\r\n                <div className=\"Name\">{this.state.enemy.Name}</div>\r\n                <img src=\"http://placekitten.com/500/300\" alt=\"avatar\"/>\r\n            </div>\r\n            <div className=\"FightBoard\">\r\n                <div className=\"PowerSum\">\r\n                    <span className=\"Power\">-</span>\r\n                    <span className=\"Power\">-</span>\r\n                    <span className=\"Power\">-</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"Stats\">\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Level </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.Lvl}</span>\r\n                </div>\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Damage </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.minDmgHero}-{this.state.enemy.maxDmgHero}</span>\r\n                </div>\r\n                <div className=\"StatRow\">\r\n                    <span className=\"StatName\">Health </span>\r\n                    <span className=\"StatValue\">{this.state.enemy.CurrentHp} out of {this.state.enemy.MaxHP}</span>\r\n                </div>\r\n            </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fight;\r\n","import React, { Component } from 'react';\r\n\r\nclass Chest extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            point: Math.floor(Math.random() * 10) + 1\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.SwitchLoat();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        global.RoomRestoreHP();\r\n    }\r\n\r\n\r\n    SwitchLoat = () => {\r\n        window.onload = () => {\r\n            document.getElementById('trans').classList.toggle(\"Active\");\r\n        }\r\n    }\r\n    ShowPopUp = () => {\r\n        document.getElementsByClassName(\"Pop_Up\")[0]\r\n        .classList.toggle(\"Active\");\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"ActField Chest\">\r\n                <div className=\"Request\">\r\n                    You find a chest\r\n                </div>\r\n                <div className=\"ActWindow\" onClick={this.ShowPopUp}>\r\n                    \r\n                </div>\r\n                <div className=\"Pop_Up Active\">\r\n                    <div className=\"Bl\">\r\n                        <span className=\"Text\">You recive </span>\r\n                        <span className=\"Value\">{this.state.point}</span>\r\n                        <span className=\"Text\"> points</span>\r\n                    </div>\r\n                    <button onClick={() => {this.SwitchLoat(); this.ShowPopUp(); global.SceneHandleClick(); global.PointsUp(this.state.point);}}>Move next</button>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chest;\r\n","import React, { Component } from 'react';\r\n//import { useState, useEffect } from 'react';\r\n\r\nclass Heroscene extends Component {\r\n    constructor (props) {\r\n        var name = prompt('Input your hero name:');\r\n\r\n        super(props);\r\n        this.state = {\r\n            Name: name,\r\n            minDmgHero: 3,\r\n            maxDmgHero: 7,\r\n            MaxHP: 20,\r\n            CurrentHp: 10,\r\n            Lvl: 1,\r\n            Kills: 0\r\n        }\r\n\r\n        this.handlePointsUp = this.handlePointsUp.bind(this);\r\n        this.handleRoomRestoreHP = this.handleRoomRestoreHP.bind(this);\r\n\r\n        global.PointsUp = this.handlePointsUp;\r\n        global.RoomRestoreHP = this.handleRoomRestoreHP;\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementsByClassName('AttackButton')[0].setAttribute('disabled', true);\r\n        \r\n    }\r\n\r\n    handlePointsUp = points => {\r\n        var tmpL = this.state.Lvl;\r\n        var tmpP = this.state.Kills + points;\r\n\r\n        this.setState({Kills : tmpP});\r\n        while (tmpL * 5 < tmpP) {\r\n            this.setState({Lvl : ++tmpL});\r\n            this.handleDmgControl();\r\n        }\r\n    }\r\n    handleRoomRestoreHP = () => {\r\n        if(this.state.CurrentHp + 3 <= this.state.MaxHP){\r\n            this.setState({CurrentHp : this.state.CurrentHp + 3});\r\n        } else{\r\n            this.setState({CurrentHp : this.state.MaxHP});\r\n        }\r\n        \r\n    }\r\n    handleDmgControl = () => {\r\n        if (this.state.Lvl % 2 === 0){\r\n            this.setState({minDmgHero : this.state.minDmgHero + 1});\r\n        } else{\r\n            this.setState({maxDmgHero : this.state.maxDmgHero + 1});\r\n        }\r\n    }\r\n\r\n    StartFight = () => {\r\n        document.getElementsByClassName('AttackButton')[0].setAttribute('disabled', true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"ActField Hero\">\r\n                    <div className=\"Bio\">\r\n                    <div className=\"Name\">{this.state.Name}</div>\r\n                    <img src=\"http://placekitten.com/200/300\" alt=\"avatar\"/>\r\n                </div>\r\n                <div className=\"FightBoard\">\r\n                    <div className=\"PowerSum\">\r\n                        <span className=\"Power\">-</span>\r\n                        <span className=\"Power\">-</span>\r\n                        <span className=\"Power\">-</span>\r\n                    </div>\r\n                    <button className=\"AttackButton\" id=\"fck\" onClick={() => global.SceneHandleClick()}>Searching...</button>\r\n                </div>\r\n                <div className=\"Stats\">\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Level </span>\r\n                        <span className=\"StatValue\">{this.state.Lvl}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Points </span>\r\n                        <span className=\"StatValue\">{this.state.Kills}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Damage </span>\r\n                        <span className=\"StatValue\">{this.state.minDmgHero}-{this.state.maxDmgHero}</span>\r\n                    </div>\r\n                    <div className=\"StatRow\">\r\n                        <span className=\"StatName\">Health </span>\r\n                        <span className=\"StatValue\">{this.state.CurrentHp} out of {this.state.MaxHP}</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Heroscene;\r\n","import React from \"react\";\nimport SceneManager from \"./components/SceneManager.jsx\";\nimport HeroScene from \"./components/HeroScene.jsx\";\nimport Transitionscene from \"./components/TransitionScene.jsx\";\nimport './style.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Transitionscene/>\n      <SceneManager/>\n      <HeroScene/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}